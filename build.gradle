apply plugin: 'java'
apply plugin: 'jooq'
apply plugin: 'maven'

allprojects {
    sourceCompatibility = 1.8
}

group = 'com.mcmoe'
version = '0.1'

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
    distributionUrl = 'http://services.gradle.org/distributions/gradle-1.11-all.zip'
}

/* add migration resources - in case flyway java migration needed */
sourceSets {
    main {
        resources {
            srcDir 'migration/src/main/resources'
        }
    }
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'com.h2database:h2:1.4.177'
        classpath 'com.github.ben-manes:gradle-jooq-plugin:latest.integration'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.11'
    compile 'com.gistlabs:mechanize:0.11.0'
    compile 'com.google.guava:guava:16.0.1'
    compile 'com.h2database:h2:1.4.177'
    compile 'joda-time:joda-time:2.3'
    compile 'org.jooq:jooq:3.3.1'
    compile 'org.jooq:jooq-meta:3.3.1'
    compile 'org.jooq:jooq-codegen:3.3.1'
    compile 'org.projectlombok:lombok:1.12.6'
    compile 'org.slf4j:slf4j-api:1.7.2'
    compile 'org.slf4j:slf4j-log4j12:1.7.2'
}


def props = new Properties()
file(property('db.properties')).withInputStream { props.load(it) }

/**
 * check: http://forums.gradle.org/gradle/topics/gradle_fails_on_jdk8_with_java_lang_classnotfoundexception_java_util_hashmap_entry
 *  - expected to be fixed in june release of gradle
 *  once available we can access the properties directly with: property('property.name')
 */
// project.ext.params = new ConfigSlurper().parse(props)
ext.db_full_url = props.getProperty('h2.db.file') + projectDir.path + props.getProperty('h2.db.url')
ext.db_user = props.getProperty('h2.db.user')
ext.db_pass = props.getProperty('h2.db.password')

generateJooq.dependsOn(":migration:build")
generateJooq.dependsOn(":migration:flywayMigrate")
compileJava.dependsOn(generateJooq)

generateJooq {
    outputs.upToDateWhen {
        !generateJooq.dependsOnTaskDidWork()
    }
}

jooq {
    jdbc {
        driver 'org.h2.Driver'
        url db_full_url
        user 'sa'
    }
    generator {
        database {
            name 'org.jooq.util.h2.H2Database'
            inputSchema ''
            includes '.*'
        }
        generate {
            deprecated false
        }
        target {
            packageName 'scrapa.jooq'
            directory "${buildDir}/generated-sources/"
        }
    }
}

build.dependsOn(install)